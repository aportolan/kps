<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:int-ws="http://www.springframework.org/schema/integration/ws"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd">


	<int:channel id="wsRequestChannel" />
	<int:channel id="gatewayErrorChannel" />

	<int-ws:inbound-gateway id="inboundGateway"
		error-channel="gatewayErrorChannel" request-channel="wsRequestChannel"
		reply-channel="immediateResponseChannel" marshaller="marshaller"
		unmarshaller="marshaller" />

	<int:channel id="immediateResponseChannel" />

	<int:payload-type-router input-channel="wsRequestChannel">
		<int:mapping
			type="hr.aportolan.kps.provisioning.ws.ProvisioningStateRequest"
			channel="serviceStateChannel" />
		<int:mapping
			type="hr.aportolan.kps.provisioning.ws.ProvisionSubscriberRequest"
			channel="logRequestInputChannel" />
		<int:mapping
			type="hr.aportolan.kps.provisioning.ws.CancelProvisioningRequest"
			channel="controlServiceChannel" />
	</int:payload-type-router>


	<int:service-activator input-channel="controlServiceChannel"
		output-channel="immediateResponseChannel" ref="requestStateServiceImpl"
		method="cancel" />

	<int:channel id="controlBusChannel" />

	<int:control-bus input-channel="controlBusChannel" />

	<int:service-activator input-channel="serviceStateChannel"
		output-channel="immediateResponseChannel" ref="requestStateServiceImpl"
		method="returnState" />


	<int:service-activator input-channel="logRequestInputChannel"
		output-channel="listRouteInputChannel" ref="provisionSubscriberServiceImpl"
		method="log" />


	<int:recipient-list-router input-channel="listRouteInputChannel">
		<int:recipient channel="transformerChannel" />
		<int:recipient channel="processChannel" />
	</int:recipient-list-router>

	<int:service-activator input-channel="transformerChannel"
		output-channel="immediateResponseChannel" ref="provisionSubscriberServiceImpl"
		method="transformToWsOutputImmediate" />

	<int:channel id="processChannel">
		<int:dispatcher task-executor="asyncExecutor" />
	</int:channel>
	<int:header-enricher input-channel="processChannel"
		output-channel="headerModifiedChannel" default-overwrite="true">
		<int:header name="errorChannel" ref="errorChannel" />
	</int:header-enricher>



	<int:splitter method="split" input-channel="headerModifiedChannel"
		output-channel="httpGatewayChannel">
		<bean class="hr.aportolan.kps.service.impl.ProvisionSplitterServiceImpl" />
	</int:splitter>



	<int-http:outbound-gateway url="{outboundGatewayUrl}"
		id="provisioningOutboundGateway" request-channel="httpGatewayChannel"
		reply-channel="provisioningOutputChannel" http-method-expression="headers.REQUEST_METHOD"
		reply-timeout="100000">
		<int-http:uri-variable name="outboundGatewayUrl"
			expression="headers['ENDPOINT_URL']" />
		<int-http:request-handler-advice-chain>
			<beans:ref bean="retryAdvice" />
		</int-http:request-handler-advice-chain>

	</int-http:outbound-gateway>

	<int:channel id="provisioningOutputChannel">
		<int:dispatcher task-executor="asyncExecutorProcessData" />
	</int:channel>


	<int:aggregator id="provisioningAggregator"
		input-channel="provisioningOutputChannel" output-channel="outboundClientWsInvokeChannel"
		expire-groups-upon-completion="true" send-partial-result-on-expiry="false"
		method="aggregate">
		<bean
			class="hr.aportolan.kps.service.impl.ProvisioningAggregatorServiceImpl" />
	</int:aggregator>

	<bean id="clientDestinationProvider"
		class="org.springframework.ws.client.support.destination.Wsdl11DestinationProvider">
		<property name="wsdl" value="classpath:wsdl/client.wsdl" />
	</bean>


	<int-ws:outbound-gateway id="marshallingGateway"
		request-channel="outboundClientWsInvokeChannel" reply-channel="outboundWsGatewayResponseChannel"
		destination-provider="clientDestinationProvider" marshaller="marshaller"
		unmarshaller="marshaller" />

	<int:channel id="outboundWsGatewayResponseChannel" />
	<int:logging-channel-adapter level="INFO"
		channel="outboundWsGatewayResponseChannel" />

	<int:payload-type-router input-channel="errorChannel">
		<int:mapping type="java.lang.Throwable" channel="standardAsyncErrorChannel" />
		<int:mapping type="org.springframework.messaging.support.ErrorMessage"
			channel="processErrorChannel" />
	</int:payload-type-router>

	<!-- <int:header-value-router input-channel="errorResponseTypeChannel" -->
	<!-- default-output-channel="processErrorChannel"> -->
	<!-- <int:mapping channel="standardErrorChannel" value="ASYNC_ERROR"/> -->
	<!-- </int:header-value-router> -->

	<int:transformer input-channel="gatewayErrorChannel"
		output-channel="immediateResponseChannel" method="respondToError">
		<bean class="hr.aportolan.kps.service.impl.ErrorResponderServiceImpl" />
	</int:transformer>

	<int:transformer input-channel="standardAsyncErrorChannel"
		output-channel="outboundClientWsInvokeChannel" method="respondToStandardAsyncError">
		<bean class="hr.aportolan.kps.service.impl.ErrorResponderServiceImpl" />
	</int:transformer>


	<int:transformer input-channel="processErrorChannel"
		output-channel="outboundClientWsInvokeChannel" method="respondToAsyncError">
		<bean class="hr.aportolan.kps.service.impl.ErrorResponderServiceImpl" />
	</int:transformer>




	<task:executor id="asyncExecutor" pool-size="50" />
	<task:executor id="asyncExecutorProcessData" pool-size="50" />

	<beans:import resource="retry-config.xml" />
</beans>